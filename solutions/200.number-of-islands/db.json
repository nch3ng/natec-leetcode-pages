{"python":"import collections\nclass Solution:\n    def numIslands(self, grid):\n        \"\"\"\n        :type grid: List[List[str]]\n        :rtype: int\n        \"\"\"\n        self.nr = nr = len(grid)\n        if nr == 0:\n            return 0\n        self.nc = nc = len(grid[0])\n        count = 0\n        for r in range(nr):\n            for c in range(nc):\n                if grid[r][c] == '1':\n                    self.dfs(grid, r, c)\n                    count += 1\n        return count\n\n    def is_within(self, r, c):\n        if r >= 0 and r <= self.nr-1 and c >= 0 and c <= self.nc-1:\n            return True\n        else:\n            return False\n\n    def dfs(self, grid, r, c):\n        if grid[r][c] == 0:\n            return None\n\n        grid[r][c] = '0'\n        directions = [(0,1), (1,0), (0,-1), (-1,0)]\n        for x,y in directions:\n            if self.is_within(r+x, c+y):\n                if grid[r+x][c+y] == '1':\n                    self.dfs(grid, r+x, c+y)\n        return None"}