{"java":"public class Solution {\r\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\r\n        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\r\n        int min = Integer.MAX_VALUE;\r\n     \r\n        for(int i=0; i<nums.length; i++){\r\n            if(map.containsKey(nums[i])){\r\n                int preIndex = map.get(nums[i]);\r\n                int gap = i-preIndex;\r\n                min = Math.min(min, gap);\r\n            }\r\n            map.put(nums[i], i);\r\n        }\r\n     \r\n        if(min <= k){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n}","ruby":"# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Boolean}\r\ndef contains_nearby_duplicate(nums, k)\r\n  min = 4611686018427387903\r\n  diff=0;\r\n  hash = Hash.new\r\n  nums[0..-1].each_with_index { |val,i|\r\n    if hash.has_key?(val)\r\n      diff = i-hash[val]\r\n      min = [min,diff].min\r\n    end\r\n      hash[val]=i\r\n  }\r\n  if min <= k\r\n    return true\r\n  else\r\n    return false\r\n  end\r\nend\r\n\r\n"}