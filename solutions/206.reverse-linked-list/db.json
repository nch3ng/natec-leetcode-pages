{"ruby":"# Definition for singly-linked list.\r\n# class ListNode\r\n#     attr_accessor :val, :next\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @next = nil\r\n#     end\r\n# end\r\n\r\n# @param {ListNode} head\r\n# @return {ListNode}\r\ndef reverse_list(head)\r\n  # no node or only one node\r\n  return head if head.nil? || head.next.nil?\r\n\r\n  current_n = head\r\n  prev_n = nil\r\n  next_n = current_n.next\r\n\r\n  # only two node\r\n  if current_n.next.next.nil?\r\n      current_n.next.next = current_n\r\n      current_n = current_n.next\r\n      current_n.next.next = nil\r\n      return current_n\r\n  end\r\n\r\n  # more than two node\r\n  while current_n.next != nil\r\n    current_n.next = prev_n\r\n    prev_n = current_n\r\n    current_n = next_n\r\n    next_n = next_n.next\r\n  end\r\n\r\n  current_n.next=prev_n\r\n  return current_n\r\nend"}