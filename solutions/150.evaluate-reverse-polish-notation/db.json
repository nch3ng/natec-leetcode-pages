{"ruby":"# @param {String[]} tokens\r\n# @return {Integer}\r\ndef eval_rpn(tokens)\r\n  opns = []\r\n  tokens.each do |token|\r\n\r\n    if token == '+' || token =='-' || token =='*' || token =='/'\r\n      op2 = opns.pop.to_i\r\n      op1 = opns.pop.to_i\r\n      new_op = 0\r\n\r\n\r\n      if token == '+'\r\n        new_op = op1 + op2\r\n\r\n      elsif token =='-'\r\n        new_op = op1 - op2\r\n      elsif token =='*'\r\n        new_op = op1 * op2\r\n      else\r\n        new_op = op1.to_f / op2.to_f\r\n        new_op = new_op.to_i\r\n      end\r\n\r\n      opns.push(new_op)\r\n    else\r\n      opns.push(token)\r\n    end\r\n  end\r\n  return opns.pop.to_i\r\nend","java":"public class Solution {\r\n    public int evalRPN(String[] tokens) {\r\n        int returnValue = 0;\r\n \r\n        String operators = \"+-*/\";\r\n \r\n        Stack<String> stack = new Stack<String>();\r\n \r\n        for(String t : tokens){\r\n            if(!operators.contains(t)){\r\n                stack.push(t);\r\n            }else{\r\n                int a = Integer.valueOf(stack.pop());\r\n                int b = Integer.valueOf(stack.pop());\r\n                int index = operators.indexOf(t);\r\n                switch(index){\r\n                    case 0:\r\n                        stack.push(String.valueOf(a+b));\r\n                        break;\r\n                    case 1:\r\n                        stack.push(String.valueOf(b-a));\r\n                        break;\r\n                    case 2:\r\n                        stack.push(String.valueOf(a*b));\r\n                        break;\r\n                    case 3:\r\n                        stack.push(String.valueOf(b/a));\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n \r\n        returnValue = Integer.valueOf(stack.pop());\r\n \r\n        return returnValue;\r\n    }\r\n}"}