{"ruby":"# Definition for a binary tree node.\r\n# class TreeNode\r\n#     attr_accessor :val, :left, :right\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @left, @right = nil, nil\r\n#     end\r\n# end\r\n\r\n# @param {TreeNode} root\r\n# @param {TreeNode} p\r\n# @param {TreeNode} q\r\n# @return {TreeNode}\r\ndef lowest_common_ancestor(root, p, q)\r\n    return root if root.nil?\r\n    \r\n    if root.val > p.val && root.val > q.val\r\n        return lowest_common_ancestor(root.left, p, q)\r\n    end\r\n    \r\n    if root.val < p.val && root.val < q.val\r\n        return lowest_common_ancestor(root.right, p, q)\r\n    end\r\n    \r\n    return root\r\nend"}