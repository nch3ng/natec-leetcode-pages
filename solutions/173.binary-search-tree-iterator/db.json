{"ruby":"# Definition for a binary tree node.\r\n# class TreeNode\r\n#     attr_accessor :val, :left, :right\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @left, @right = nil, nil\r\n#     end\r\n# end\r\n\r\nclass BSTIterator\r\n    @s\r\n    # @param {TreeNode} root\r\n    def initialize(root)\r\n        @s=[]\r\n        tmp=root\r\n        until tmp.nil?\r\n            @s.push(tmp)\r\n            tmp=tmp.left\r\n        end\r\n    end\r\n\r\n    # @return {Boolean}\r\n    def has_next\r\n        !@s.empty?\r\n    end\r\n\r\n    # @return {Integer}\r\n    def next\r\n        n = @s.pop\r\n        result = n.val\r\n        if !n.right.nil?   \r\n            n=n.right\r\n            \r\n            until n.nil?\r\n                @s.push n\r\n                n=n.left\r\n            end\r\n        end\r\n        result\r\n    end\r\nend\r\n\r\n# Your BSTIterator will be called like this:\r\n# i, v = BSTIterator.new(root), []\r\n# while i.has_next()\r\n#    v << i.next\r\n# end"}