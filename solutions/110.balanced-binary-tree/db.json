{"ruby":"# Definition for a binary tree node.\r\n# class TreeNode\r\n#     attr_accessor :val, :left, :right\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @left, @right = nil, nil\r\n#     end\r\n# end\r\n\r\n\r\ndef maxHeight(root)\r\n    #print \"node: #{root.val}\\n\" if !root.nil?\r\n    return 0 if root.nil?\r\n    \r\n    lh=maxHeight(root.left)\r\n    rh=maxHeight(root.right)\r\n    #print \"left height: #{lh}, right height: #{rh}\\n\"\r\n    return -1 if lh < 0 || rh < 0\r\n    return -1 if (lh-rh).abs > 1\r\n    \r\n    \r\n    \r\n    return [lh,rh].max+1\r\nend\r\n# @param {TreeNode} root\r\n# @return {Boolean}\r\ndef is_balanced(root)\r\n    h = maxHeight(root)\r\n    return false if h < 0\r\n    return true if h >= 0\r\nend"}