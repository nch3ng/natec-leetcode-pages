{"ruby":"# Definition for a binary tree node.\r\n# class TreeNode\r\n#     attr_accessor :val, :left, :right\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @left, @right = nil, nil\r\n#     end\r\n# end\r\n\r\ndef sorted_array_to_bst_wrap(nums, start, ends)\r\n    \r\n    return nil if start > ends\r\n    \r\n    mid = (start+ends)/2\r\n    \r\n    root = TreeNode.new(nums[mid])\r\n    root.left = sorted_array_to_bst_wrap(nums, start, mid-1)\r\n    root.right = sorted_array_to_bst_wrap(nums, mid+1, ends)\r\n    \r\n    return root\r\nend\r\n\r\n# @param {Integer[]} nums\r\n# @return {TreeNode}\r\ndef sorted_array_to_bst(nums)\r\n    return sorted_array_to_bst_wrap(nums, 0, nums.length-1)\r\nend"}