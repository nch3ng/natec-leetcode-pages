{"ruby":"# Definition for a binary tree node.\r\n# class TreeNode\r\n#     attr_accessor :val, :left, :right\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @left, @right = nil, nil\r\n#     end\r\n# end\r\n\r\n# @param {Integer[]} inorder\r\n# @param {Integer[]} postorder\r\n# @return {TreeNode}\r\ndef build_tree(inorder, postorder)\r\n    return nil if inorder.empty? || postorder.empty?\r\n    \r\n    mid = postorder[-1]\r\n    length = inorder.length\r\n    root = TreeNode.new(mid)\r\n    return root if length===1\r\n    \r\n    idx = inorder.index(mid)\r\n\r\n    r_len=0\r\n    r_len = length-idx-1 # (idx+1) ~ length-1\r\n\r\n    l_len=0\r\n    l_len= idx #0 ~ (idx-1)\r\n\r\n    root.left = build_tree(inorder[0,l_len], postorder[0,l_len])\r\n    root.right = build_tree(inorder[idx+1, r_len], postorder[idx, r_len])\r\n    \r\n    root\r\nend"}