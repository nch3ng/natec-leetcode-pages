{"ruby":"# Definition for a binary tree node.\r\n# class TreeNode\r\n#     attr_accessor :val, :left, :right\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @left, @right = nil, nil\r\n#     end\r\n# end\r\n\r\n# @param {TreeNode} root\r\n# @return {Integer}\r\ndef min_depth(root)\r\n    \r\n    return 0 if root.nil?\r\n    \r\n    parent_level = Hash.new\r\n    s=[]\r\n    s.push root\r\n    min_depth = 0\r\n    flag=false\r\n    until s.empty?\r\n        r = s.pop\r\n        parent_level[r]=0 if parent_level[r].nil?\r\n        current_level=parent_level[r]+1\r\n        \r\n        if r.left.nil? && r.right.nil?\r\n            flag=true\r\n            min_depth = current_level if min_depth == 0\r\n            min_depth = [current_level,min_depth].min if min_depth != 0\r\n        end\r\n        \r\n        if !r.left.nil? && (!flag || current_level <= min_depth)\r\n            s.push r.left\r\n            parent_level[r.left]=current_level\r\n        end\r\n        \r\n        if !r.right.nil? && (!flag || current_level <= min_depth)\r\n            s.push r.right\r\n            parent_level[r.right]=current_level\r\n        end\r\n    end\r\n    \r\n    min_depth\r\n    \r\nend"}