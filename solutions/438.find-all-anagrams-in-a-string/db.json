{"python":"# all lower case\n# possible the same alphabet in p or s\n# p is empty\n# p is longer than s\n# max\n\nclass Solution:\n    def findAnagrams(self, s, p):\n        ans = []\n        if s == None or p == None:\n            return ans\n\n        len_s, len_p = len(s), len(p)\n\n        if len_p > len_s:\n            return ans\n\n        hash_p = dict()\n\n        for c in p:\n            if c in hash_p:\n                hash_p[c] += 1\n            else:\n                hash_p[c] = 1        \n        \n        window_hash = dict()\n        for i in range(len_s):\n            if i > len_p - 1:\n                # print(window_hash)\n                if window_hash[s[i-len_p]] == 1:\n                    del window_hash[s[i-len_p]]\n                else:\n                    window_hash[s[i-len_p]] -= 1\n\n            # print(window_hash)\n            c = s[i]\n            if c in window_hash:\n                window_hash[c] += 1\n            else:\n                window_hash[c] = 1\n\n        # for i in range(len_s - len_p + 1):\n        #     window_hash = self.populateHash(s[i:i+len_p])\n\n            if window_hash == hash_p:\n                ans.append(i-len_p+1)\n\n        return ans"}