{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\r\n        int carry =0;\r\n \r\n        ListNode newHead = new ListNode(0);\r\n        ListNode p1 = l1, p2 = l2, p3=newHead;\r\n \r\n        while(p1 != null || p2 != null){\r\n            if(p1 != null){\r\n                carry += p1.val;\r\n                p1 = p1.next;\r\n            }\r\n \r\n            if(p2 != null){\r\n                carry += p2.val;\r\n                p2 = p2.next;\r\n            }\r\n \r\n            p3.next = new ListNode(carry%10);\r\n            p3 = p3.next;\r\n            carry /= 10;\r\n        }\r\n \r\n        if(carry==1) \r\n            p3.next=new ListNode(1);\r\n \r\n        return newHead.next;\r\n    }\r\n}","ruby":"# Definition for singly-linked list.\r\n# class ListNode\r\n#     attr_accessor :val, :next\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @next = nil\r\n#     end\r\n# end\r\n\r\n# @param {ListNode} l1\r\n# @param {ListNode} l2\r\n# @return {ListNode}\r\ndef add_two_numbers(l1, l2)\r\n  c1=l1\r\n  c2=l2\r\n  tmp=nil\r\n  c3=nil\r\n  carry=0\r\n  i=0\r\n\r\n  return c1 if c2.nil?\r\n  return c2 if c1.nil?\r\n\r\n  while !c1.nil? || !c2.nil?\r\n\r\n    if !c1.nil?\r\n      carry+=c1.val\r\n      c1=c1.next\r\n    end\r\n\r\n    if !c2.nil?\r\n      carry+=c2.val\r\n      c2=c2.next\r\n    end\r\n\r\n    if tmp.nil?\r\n      tmp = ListNode.new(carry%10)\r\n      tmp.next=nil\r\n      c3=tmp\r\n    else\r\n      tmp.next = ListNode.new(carry%10)\r\n      tmp=tmp.next\r\n      tmp.next=nil\r\n\r\n    end\r\n    carry /= 10\r\n  end\r\n\r\n  if carry != 0\r\n    tmp.next = ListNode.new(carry%10)\r\n    tmp=tmp.next\r\n    tmp.next=nil\r\n  end\r\n\r\n  return c3\r\nend"}